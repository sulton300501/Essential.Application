// <auto-generated />
using Essential.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Essential.Infrastructure.Migrations
{
    [DbContext(typeof(EssentialDbContext))]
    partial class EssentialDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Essential.Domain.Models.EssentialModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BookNumber")
                        .HasColumnType("integer");

                    b.Property<string>("EngWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RusWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("integer");

                    b.Property<string>("UzbWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Essential");
                });
#pragma warning restore 612, 618
        }
    }
}
